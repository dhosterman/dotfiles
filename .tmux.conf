# reset prefix to CTRL-A
set -g prefix C-a
bind-key a send-prefix

set-window-option -g allow-rename off
# 256 colors for vim
set -g default-terminal "screen-256color"

# Cycle panes with C-b C-b
unbind ^B
bind ^B select-pane -t :.+

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Mouse works as expected
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use the system clipboard
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# Clear the pane and it's history
bind -n C-k send-keys C-l \; clear-history

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Status bar
# colors
set -g status-bg colour240
set -g status-fg white

# alignment
set-option -g status-justify centre

# spot at left
set-option -g status-left '#[bg=colour240,fg=grey][#[fg=grey]#S#[fg=grey]]'
set-option -g status-left-length 20

# window list
setw -g automatic-rename on
set-window-option -g window-status-format '#[dim]#I:#[default]#W#[fg=grey,dim]'
set-window-option -g window-status-current-format '#[fg=grey,bold]#I#[fg=grey]:#[fg=grey]#W#[fg=dim]'

# spot at right
set -g status-right '#[fg=grey][#[fg=grey]%Y-%m-%d %H:%M#[fg=grey]]'

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Highlight active window
set-window-option -g window-status-current-bg blue

# hl for window navigation
unbind-key h
bind -r h previous-window
unbind-key l
bind -r l next-window
bind-key C-a last-window

# start window numbering at 1
set -g base-index 1

# set escape key delay to 0
set -sg escape-time 0

# set vertical split to C-\
unbind '"'
bind-key \ split-window -h

# set horizontal split to C--
unbind %
bind-key - split-window -v
